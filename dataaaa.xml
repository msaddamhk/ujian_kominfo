   // $key = 'login_attempt_' . $ip;
            // $failed_attempts = Cache::get($key, 0);
            // $failed_attempts++;
            // $block_duration = 1;

            // if (Cache::get($key) >= $attempts) {
            //     $blocked_at = Cache::get($key . '_blocked_at');
            //     if (now()->diffInMinutes($blocked_at) < $block_duration) {
            //         return redirect('/login')->with('loginError', 'IP anda telah diblokir karena terlalu banyak percobaan login yang gagal. Silahkan coba lagi dalam ' . ($block_duration - now()->diffInMinutes($blocked_at)) . ' menit.');
            //     } else {
            //         Cache::put($key, 0, now()->addMinutes($decayMinutes));
            //     }
            // } else {
            //     if (Auth::attempt($request->only('email', 'password'), $request->filled('remember'))) {
            //         Cache::put($key, 0, now()->addMinutes($decayMinutes));
            //         return redirect('/');
            //     } else {
            //         $failed_attempts++;
            //         if ($failed_attempts >= $attempts) {
            //             Cache::put($key, $failed_attempts, now()->addMinutes($decayMinutes));
            //             Cache::put($key . '_blocked_at', now(), now()->addMinutes($decayMinutes));
            //             return redirect('/login')->with('loginError', 'IP anda telah diblokir karena terlalu banyak percobaan login yang gagal. Silahkan coba lagi dalam ' . $block_duration . ' menit.');
            //         } else {
            //             Cache::put($key, $failed_attempts, now()->addMinutes($decayMinutes));
            //             return redirect('/login')->with('loginError', 'Periksa kembali email dan password Anda.');
            //         }
            //     }
            // }




// $key = 'login_attempt_' . $ip;
// // $failed_attempts = Cache::get($key, 0);
// // $failed_attempts++;

// // if ($failed_attempts >= $attempts) {
// //     Cache::put($key, $failed_attempts, now()->addMinutes($decayMinutes));
// //     $seconds = $decayMinutes * 60;
// //     return redirect()->back()->with('seconds', $seconds)->with('loginError', 'Mohon maaf anda di blokir karena terlalu banyak melakukan kesalahan pada login');
// // } else {
// //     $credentials = $request->only('email', 'password');
// //     if (Auth::attempt($credentials)) {
// //         Cache::forget($ip . '_login_attempts');
// //         return redirect()->intended();
// //     } else {
// //         Cache::put($key, $failed_attempts, now()->addMinutes($decayMinutes));
// //         return redirect()->back()->with('loginError', 'Periksa kembali email dan password Anda.');
// //     }
// // }



            // $key = 'login_attempt_' . $ip;
            // $failed_attempts = Cache::get($key, 0);
            // $failed_attempts++;

            // if ($failed_attempts >= $attempts) {
            //     Cache::put($key, $failed_attempts, now()->addMinutes($decayMinutes));
            //     return redirect()->back()->with('loginError', 'IP Anda diblokir sementara selama 1 menit');
            // } else {
            //     $credentials = $request->only('email', 'password');
            //     if (Auth::attempt($credentials)) {
            //         Cache::forget($ip . '_login_attempts');
            //         return redirect()->intended();
            //     } else {
            //         Cache::put($key, $failed_attempts, now()->addMinutes($decayMinutes));
            //         return redirect()->back()->with('loginError', 'Username atau password salah.');
            //     }
            // }



// class LoginController extends Controller
// {

//     public function index()
//     {
//         return view('Login');
//     }

//     public function authenticate(Request $request)
//     {
//         $validatedData = $request->validate([
//             'email' => 'required|email',
//             'password' => 'required'
//         ]);

//         if (Auth::attempt($validatedData)) {
//             return redirect('/');
//         }

//         return back()->with('loginError', 'Login Gagal');
//     }

//     public function logout()
//     {
//         Auth::logout();
//         return redirect('/login');
//     }
// }